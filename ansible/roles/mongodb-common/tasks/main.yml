---
- name: create user mongod
  user:
    name: mongod
    groups: svc
    shell: /sbin/nologin
    create_home: false

- name: re-install ca-certificates
  apt:
    update_cache: yes
    name: ['ca-certificates']
    state: latest

- name: add zabbix repo config
  shell: curl -o - https://mirrors.aliyun.com/zabbix/zabbix-official-repo.key | apt-key add -; echo deb https://mirrors.aliyun.com/zabbix/zabbix/5.4/ubuntu $(lsb_release -cs) main >> /etc/apt/sources.list; apt update

- name: apt install zabbix-agent2
  apt:
    update_cache: yes
    name: ['zabbix-agent2', 'zabbix-get', 'zabbix-sender']
    state: present

- name: stop zabbix-agent
  systemd:
    name: zabbix-agent2
    enabled: no
    state: stopped

- name: apt install needed packages
  apt:
    name: jq
    update_cache: yes
    state: latest

- name: prepare for installing caddy
  shell: apt install -y debian-keyring debian-archive-keyring apt-transport-https; curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | tee /etc/apt/trusted.gpg.d/caddy-stable.asc; curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | tee /etc/apt/sources.list.d/caddy-stable.list; apt update

- name: apt install caddy
  apt:
    name: caddy
    state: latest

- name: stop caddy
  systemd:
    name: caddy
    enabled: no
    state: stopped

- name: install mongoshake binaries
  include_role:
    name: install-1.0.6
  vars:
    opts:
      pkg_name: mongo-shake
      pkg_version: "{{ mongo_shake_version }}"
      pkg_url: https://github.com/alibaba/MongoShake/releases/download/release-v{{ mongo_shake_version }}-20210723-1/mongo-shake-v{{ mongo_shake_version }}.tar.gz
      pkg_type: tar.gz
      creates: bin
      extracts: yes

- name: install mongodb exporter binaries
  include_role:
    name: install-1.0.6
  vars:
    opts:
      pkg_name: mongodb_exporter
      pkg_version: "{{ mongodb_exporter_version }}"
      pkg_url: https://github.com/percona/mongodb_exporter/releases/download/v{{ mongodb_exporter_version }}/mongodb_exporter-{{ mongodb_exporter_version }}.linux-amd64.tar.gz
      pkg_type: tar.gz
      creates: bin
      extracts: yes

- name: install node exporter binaries
  include_role:
    name: install-1.0.6
  vars:
    opts:
      pkg_name: node_exporter
      pkg_version: "{{ node_exporter_version }}"
      pkg_url: https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz
      pkg_type: tar.gz
      creates: bin
      extracts: yes


- name: install mongodb binaries
  include_role:
    name: install-1.0.6
  vars:
    opts:
      pkg_name: mongodb
      pkg_version: "{{ mongodb_version }}"
      pkg_url: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-{{ mongodb_version }}.tgz
      pkg_type: tgz
      creates: bin
      extracts: yes

- name: copy app files
  copy:
    src: opt/app/current/
    dest: /opt/app/current/
    owner: root
    group: svc
    mode: preserve
    directory_mode: u=rwx,g=rx,o=

- name: modify /opt/app/current/bin/ctl.sh
  shell: sed -i 's/local f; for f in $(find \/opt\/app\/current\/bin\/node\/ -name "$fileNames.sh"); do . $f; done/local f; for f in $(eval echo "{$fileNames}.sh"); do . \/opt\/app\/current\/bin\/node\/$f; done/' /opt/app/current/bin/ctl.sh
  
- name: cp command
  shell: cp /opt/mongo-shake/current/mongo-shake-v2.6.5/collector.linux /usr/bin/mongoshake; cp /opt/node_exporter/current/node_exporter-1.2.2.linux-amd64/node_exporter /usr/bin/node_exporter; cp /opt/mongodb_exporter/current/mongodb_exporter-0.20.9.linux-amd64/mongodb_exporter /usr/bin/mongodb_exporter

- name: install confd files
  include_role:
    name: confd-files-1.1.0

- name: clear syslog
  shell: ": > /var/log/syslog"